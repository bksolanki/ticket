/**
 * This class is generated by jOOQ
 */
package com.bhargav.sales.quickstart.tables.records;


import com.bhargav.sales.quickstart.tables.Event;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EventRecord extends UpdatableRecordImpl<EventRecord> implements Record7<Integer, String, String, Timestamp, String, String, String> {

    private static final long serialVersionUID = -37551565;

    /**
     * Setter for <code>sales.Event.event_id</code>.
     */
    public void setEventId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>sales.Event.event_id</code>.
     */
    public Integer getEventId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>sales.Event.Artist</code>.
     */
    public void setArtist(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>sales.Event.Artist</code>.
     */
    public String getArtist() {
        return (String) get(1);
    }

    /**
     * Setter for <code>sales.Event.venue</code>.
     */
    public void setVenue(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>sales.Event.venue</code>.
     */
    public String getVenue() {
        return (String) get(2);
    }

    /**
     * Setter for <code>sales.Event.event_date_time</code>.
     */
    public void setEventDateTime(Timestamp value) {
        set(3, value);
    }

    /**
     * Getter for <code>sales.Event.event_date_time</code>.
     */
    public Timestamp getEventDateTime() {
        return (Timestamp) get(3);
    }

    /**
     * Setter for <code>sales.Event.City</code>.
     */
    public void setCity(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>sales.Event.City</code>.
     */
    public String getCity() {
        return (String) get(4);
    }

    /**
     * Setter for <code>sales.Event.state</code>.
     */
    public void setState(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>sales.Event.state</code>.
     */
    public String getState() {
        return (String) get(5);
    }

    /**
     * Setter for <code>sales.Event.event_name</code>.
     */
    public void setEventName(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>sales.Event.event_name</code>.
     */
    public String getEventName() {
        return (String) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<Integer, String, String, Timestamp, String, String, String> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<Integer, String, String, Timestamp, String, String, String> valuesRow() {
        return (Row7) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Event.EVENT.EVENT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Event.EVENT.ARTIST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Event.EVENT.VENUE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field4() {
        return Event.EVENT.EVENT_DATE_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Event.EVENT.CITY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return Event.EVENT.STATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return Event.EVENT.EVENT_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getEventId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getArtist();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getVenue();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value4() {
        return getEventDateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getCity();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getState();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getEventName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EventRecord value1(Integer value) {
        setEventId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EventRecord value2(String value) {
        setArtist(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EventRecord value3(String value) {
        setVenue(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EventRecord value4(Timestamp value) {
        setEventDateTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EventRecord value5(String value) {
        setCity(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EventRecord value6(String value) {
        setState(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EventRecord value7(String value) {
        setEventName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EventRecord values(Integer value1, String value2, String value3, Timestamp value4, String value5, String value6, String value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached EventRecord
     */
    public EventRecord() {
        super(Event.EVENT);
    }

    /**
     * Create a detached, initialised EventRecord
     */
    public EventRecord(Integer eventId, String artist, String venue, Timestamp eventDateTime, String city, String state, String eventName) {
        super(Event.EVENT);

        set(0, eventId);
        set(1, artist);
        set(2, venue);
        set(3, eventDateTime);
        set(4, city);
        set(5, state);
        set(6, eventName);
    }
}
